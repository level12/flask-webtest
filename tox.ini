[tox]
envlist = py{39,312}-lowest,py{39,310,311,312}-{base,stable},project,docs


[testenv]
# Ignore all "not installed in testenv" warnings.
allowlist_externals = *
skip_install = true
# Force recreation of virtualenvs for each run.  When testing in CI, this won't matter b/c the
# virtualenvs won't exist in the container.  When testing locally, if you've ran tox previously
# then the libraries in the tox virtualenv won't get updated on pip-install.  That means CI will
# test different library versions than you are testing locally.  Recreating virtualenvs should
# prevent most of that mismatch.
recreate=False
commands =
    pip --version
    lowest: pip install flask<2.0.0 sqlalchemy~=1.4.1 flask-sqlalchemy~=2.5.1 markupsafe<2.1.0
    stable: pip install --progress-bar off -r ./stable-requirements.txt
    pip install --progress-bar off .[tests]
    # Output installed versions to compare with previous test runs in case a dependency's change
    # breaks things for our build.
    pip freeze
    ./test.sh

[testenv:project]
basepython = python3.9
skip_install = true
usedevelop = false
deps =
    flake8
    twine
commands =
    # check-manifest --ignore tox.ini,tests*
    python setup.py sdist
    twine check dist/*
    flake8 flask_webtest.py tests

[flake8]
exclude = .tox,*egg,build,.git,dist,docs
max-line-length = 100
ignore = E265,E123,E133,E226,E241,E242

[testenv:docs]
basepython = python3.9
recreate = false
skip_install = false
usedevelop = true
commands =
    pip install -r docs/requirements.txt
    make -C docs/ html
